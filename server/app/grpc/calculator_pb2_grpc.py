# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc
from grpc.framework.common import cardinality
from grpc.framework.interfaces.face import utilities as face_utilities

import calculator_pb2 as calculator__pb2


class CalculatorStub(object):

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Add = channel.unary_unary(
        '/calculator.Calculator/Add',
        request_serializer=calculator__pb2.CalculateRequest.SerializeToString,
        response_deserializer=calculator__pb2.CalculateResponse.FromString,
        )
    self.Subtract = channel.unary_unary(
        '/calculator.Calculator/Subtract',
        request_serializer=calculator__pb2.CalculateRequest.SerializeToString,
        response_deserializer=calculator__pb2.CalculateResponse.FromString,
        )
    self.Multiply = channel.unary_unary(
        '/calculator.Calculator/Multiply',
        request_serializer=calculator__pb2.CalculateRequest.SerializeToString,
        response_deserializer=calculator__pb2.CalculateResponse.FromString,
        )
    self.Divide = channel.unary_unary(
        '/calculator.Calculator/Divide',
        request_serializer=calculator__pb2.CalculateRequest.SerializeToString,
        response_deserializer=calculator__pb2.CalculateResponse.FromString,
        )


class CalculatorServicer(object):

  def Add(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Subtract(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Multiply(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Divide(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_CalculatorServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Add': grpc.unary_unary_rpc_method_handler(
          servicer.Add,
          request_deserializer=calculator__pb2.CalculateRequest.FromString,
          response_serializer=calculator__pb2.CalculateResponse.SerializeToString,
      ),
      'Subtract': grpc.unary_unary_rpc_method_handler(
          servicer.Subtract,
          request_deserializer=calculator__pb2.CalculateRequest.FromString,
          response_serializer=calculator__pb2.CalculateResponse.SerializeToString,
      ),
      'Multiply': grpc.unary_unary_rpc_method_handler(
          servicer.Multiply,
          request_deserializer=calculator__pb2.CalculateRequest.FromString,
          response_serializer=calculator__pb2.CalculateResponse.SerializeToString,
      ),
      'Divide': grpc.unary_unary_rpc_method_handler(
          servicer.Divide,
          request_deserializer=calculator__pb2.CalculateRequest.FromString,
          response_serializer=calculator__pb2.CalculateResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'calculator.Calculator', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
